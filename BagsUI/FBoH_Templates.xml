<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/..\FrameXML\UI.xsd">
	<Script file="FBoH_Templates.lua">
	</Script>

	<Frame name="FBoH_DockRegionTemplate" virtual="true" hidden="true">
		<Size>
			<AbsDimension x="0" y="32"/>
		</Size>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture name="$parent_Highlight" file="Interface\ChatFrame\UI-ChatFrame-DockHighlight" alphaMode="ADD">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="-15" y="-6"/>
							</Offset>
						</Anchor>
					</Anchors>
					<Color r="1.0" g="0" b="0"/> 
				</Texture>
			</Layer>
		</Layers>
	</Frame>

	<Button name="FBoH_ViewTabTemplate" virtual="true" hidden="true" toplevel="true" frameStrata="HIGH" enableMouse="true" clampedToScreen="false">
		<Size>
			<AbsDimension x="96" y="32"/>
		</Size>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture name="$parentLeft" file="Interface\HelpFrame\HelpFrameTab-Active">
					<Size>
						<AbsDimension x="16" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
					<TexCoords left="0.0" right="0.25" top="0.0" bottom="1.0"/>
				</Texture>
				<Texture name="$parentRight" file="Interface\HelpFrame\HelpFrameTab-Active">
					<Size>
						<AbsDimension x="16" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="TOPRIGHT"/>
					</Anchors>
					<TexCoords left="0.75" right="1.0" top="0.0" bottom="1.0"/>
				</Texture>
				<Texture name="$parentMiddle" file="Interface\HelpFrame\HelpFrameTab-Active">
					<Size>
						<AbsDimension x="76" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT"/>
						<Anchor point="RIGHT" relativeTo="$parentRight" relativePoint="LEFT"/>
					</Anchors>
					<TexCoords left="0.25" right="0.75" top="0.0" bottom="1.0"/>
				</Texture>
			</Layer>
		</Layers>
		<Frames>
			<Frame name="$parentFlash" hidden="true">
				<Size>
					<AbsDimension x="5" y="32"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentLeft">
						<Offset>
							<AbsDimension x="0" y="-7"/>
						</Offset>
					</Anchor>
					<Anchor point="RIGHT" relativeTo="$parentRight">
						<Offset>
							<AbsDimension x="0" y="-7"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture file="Interface\PaperDollInfoFrame\UI-Character-Tab-Highlight" alphaMode="ADD" setAllPoints="true"/>
					</Layer>
				</Layers>
			</Frame>
			<Frame name="$parentDropDown" inherits="UIDropDownMenuTemplate" id="2" hidden="true">
				<Anchors>
					<Anchor point="TOP">
						<Offset>
							<AbsDimension x="-80" y="-35"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
--						FCFOptionsDropDown_OnLoad();
					</OnLoad>
					<OnShow>
--						FCFOptionsDropDown_OnLoad();
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="$parentDockRegion" inherits="FBoH_DockRegionTemplate" id="1">
				<Anchors>
					<Anchor point="BOTTOMLEFT" relativePoint="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="0" y="-16"/>
						</Offset>
					</Anchor>
				</Anchors>				
			</Frame>
		</Frames>
		<Scripts>
			<OnLoad>
				self.UpdateTabModel = FBoH_ViewTabTemplate_UpdateTabModel;
				self.OpenMenu = FBoH_ViewTabTemplate_OpenMenu;
				
				self.dockRegion = FBoH_GetChildObjectByID(self, 1);
				
				self:RegisterForClicks("LeftButtonDown", "LeftButtonUp", "RightButtonUp");
				self:RegisterForDrag("LeftButton");
			</OnLoad>
			<OnClick>
				PlaySound("UChatScrollButton");
				self.tabModel.viewModel:SelectTab(self.tabModel.tabIndex);
				if arg1 == "RightButton" then
					self:OpenMenu()
				end
			</OnClick>
			<OnEnter>
				GameTooltip_AddNewbieTip(self, "Bag View Options", 1.0, 1.0, 1.0, NEWBIE_TOOLTIP_CHATOPTIONS, 1);
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide();
			</OnLeave>
			<OnDragStart>
				if self.tabModel == nil then
					FBoH:Print("ERROR: No bag model to move for tab: " .. self:GetName());
					return;
				end;
				
				local x = self:GetLeft() - 2;
				local y = self:GetBottom();
				local viewFrame = nil;
				
				if self.tabModel.tabIndex == 1 then
					viewFrame = self.tabModel.viewModel.view;
				else
					local tabIndex = self.tabModel.tabIndex;
					local viewIndex = self.tabModel.viewModel.viewIndex;
					
					local newViewModel = FBoH:UndockView(viewIndex, tabIndex);
					viewFrame = newViewModel.view;
				end
				
				if viewFrame then
					-- Reposition and display the frame in case it is currently docked and hidden:
					viewFrame:ClearAllPoints();				
					viewFrame:SetPoint("TOPLEFT", nil, "BOTTOMLEFT", x, y);
					viewFrame:Show();
					
					viewFrame.isMoving = true;
					viewFrame:StartMoving();
					
					FBoH_MOVING_BAG_VIEW = viewFrame;
				end
			</OnDragStart>
			<OnDragStop>
				if self.tabModel == nil then
					return;
				end;
				
				local viewFrame = self.tabModel.viewModel.view;
				if viewFrame.isMoving then
					viewFrame:StopMovingOrSizing();
					viewFrame.isMoving = false;
					self.tabModel.viewModel:SaveFramePosition();
					FBoH_MOVING_BAG_VIEW = nil;
					
					if FBoH_DOCK_TO_VIEW and MouseIsOver(FBoH_DOCK_TO_VIEW.dockRegion) then
						local viewIndex = viewFrame.viewModel.viewIndex;						
						FBoH:DockView(viewIndex, FBoH_DOCK_TO_VIEW.viewIndex, FBoH_DOCK_TO_VIEW.tabIndex);
					end
					FBoH_DOCK_TO_VIEW = nil;
				end
			</OnDragStop>
			<OnUpdate>
				-- This is necessary because if we break off a tab, 
				-- WoW won't send us an OnDragStop event
				
				local viewFrame = self.tabModel.viewModel.view;			
				if viewFrame.isMoving then
					if IsMouseButtonDown("LeftButton") ~= 1 then
						viewFrame:StopMovingOrSizing();
						viewFrame.isMoving = false;
						self.tabModel.viewModel:SaveFramePosition();
						FBoH_MOVING_BAG_VIEW = nil;
					
						if FBoH_DOCK_TO_VIEW and MouseIsOver(FBoH_DOCK_TO_VIEW.dockRegion) then
							local viewIndex = viewFrame.viewModel.viewIndex;						
							FBoH:DockView(viewIndex, FBoH_DOCK_TO_VIEW.viewIndex, FBoH_DOCK_TO_VIEW.tabIndex);
						end
						FBoH_DOCK_TO_VIEW = nil;
					end
				end
				
				if MouseIsOver(self.dockRegion) and FBoH_MOVING_BAG_VIEW then
					-- Make sure we're not somehow over ourselves (can be caused
					-- by video/ui lag)
					if FBoH_MOVING_BAG_VIEW.viewModel.viewIndex ~= self.tabModel.viewModel.viewIndex then
						FBoH_DOCK_TO_VIEW = FBoH_DOCK_TO_VIEW or {};
						FBoH_DOCK_TO_VIEW.viewIndex = self.tabModel.viewModel.viewIndex;
						FBoH_DOCK_TO_VIEW.tabIndex = self.tabModel.tabIndex;
						FBoH_DOCK_TO_VIEW.dockRegion = self.dockRegion;
					
						self.dockRegion:Show();
					else
						self.dockRegion:Hide();
					end
				else
					self.dockRegion:Hide();
				end
			</OnUpdate>
		</Scripts>
		<ButtonText name="$parentText">
			<Size>
				<AbsDimension x="50" y="8"/>
			</Size>
			<Anchors>
				<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT">
					<Offset>
						<AbsDimension x="0" y="-5"/>
					</Offset>
				</Anchor>
				<Anchor point="RIGHT" relativeTo="$parentRight" relativePoint="LEFT">
					<Offset>
						<AbsDimension x="0" y="-5"/>
					</Offset>
				</Anchor>
			</Anchors>
		</ButtonText>
		<NormalFont style="GameFontNormalSmall"/>
		<HighlightFont style="GameFontHighlightSmall"/>
		<DisabledFont style="GameFontHighlightSmall"/>
		<HighlightTexture file="Interface\PaperDollInfoFrame\UI-Character-Tab-Highlight" alphaMode="ADD">
			<Anchors>
				<Anchor point="LEFT" relativeTo="$parentLeft">
					<Offset>
						<AbsDimension x="0" y="-7"/>
					</Offset>
				</Anchor>
				<Anchor point="RIGHT" relativeTo="$parentRight">
					<Offset>
						<AbsDimension x="0" y="-7"/>
					</Offset>
				</Anchor>
			</Anchors>
		</HighlightTexture>
	</Button>
	
	<Frame name="FBoH_OutlineTemplate" virtual="true">
		<Backdrop edgeFile="Interface\Tooltips\UI-Tooltip-Border" bgFile="Interface\Tooltips\UI-Tooltip-Background">
			<BackgroundInsets>
				<AbsInset left="4" right="4" top="4" bottom="4"/>
			</BackgroundInsets>
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<Color r="0" g="0" b="0" a="0.6"/>
			<BorderColor r="0.3" g="0.8" b="1" a="0.8"/>
		</Backdrop>
	</Frame>
	
	<Button name="FBoH_ResizeTemplate" virtual="true" movable="true">
		<Size>
			<AbsDimension x="32" y="32"/>
		</Size>
		<Scripts>
			<OnMouseDown>
				this:GetParent():StartSizing()
			</OnMouseDown>
			<OnMouseUp>
				this:GetParent():StopMovingOrSizing();
			</OnMouseUp>
		</Scripts>
		<NormalTexture file="Interface\AddOns\FBagOfHolding\Images\ResizeGrip"/>
		<HighlightTexture file="Interface\AddOns\FBagOfHolding\Images\ResizeGrip" alphaMode="ADD"/>
	</Button>	

	<Button name="FBoH_ColumnResizeTemplate" virtual="true" movable="true">
		<Size>
			<AbsDimension x="8" y="32"/>
		</Size>
		<Scripts>
			<OnMouseDown>
				local parent = this:GetParent();
				local pc = {};
				local numPoints = parent:GetNumPoints();

				for i = 1, numPoints do
					local p = {};
					p.point, p.relativeTo, p.relativePoint, p.xOff, p.yOff = parent:GetPoint(i)
					pc[i] = p;
				end
				this.pointCache = pc;
				
				parent:StartSizing()
			</OnMouseDown>
			<OnMouseUp>
				local parent = this:GetParent();
				
				parent:StopMovingOrSizing();
				
				for i, v in pairs(this.pointCache) do
					parent:SetPoint(v.point, v.relativeTo, v.relativePoint, v.xOff, v.yOff);
					--FBoH:Print("Restored point " .. i .. "...");
				end
				this.pointCache = nil;
				
				parent:GetParent():UpdateColumnResizeLimits();
			</OnMouseUp>
		</Scripts>
		<NormalTexture file="Interface\AddOns\FBagOfHolding\Images\ResizeColumnGrip"/>
		<HighlightTexture file="Interface\AddOns\FBagOfHolding\Images\ResizeColumnGrip" alphaMode="ADD"/>
	</Button>	

	<Frame name="FBoH_ColumnHeaderTemplate" virtual="true">
		<Size>
			<AbsDimension x="100" y="30"/>
		</Size>
		<Layers>
			<Layer level="ARTWORK">
				<FontString inherits="GameFontNormal" text="Title">
					<Anchors>
						<Anchor point="TOPLEFT"/>
						<Anchor point="BOTTOMRIGHT"/>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				this.SetText = FBoH_ColumnHeaderTemplate_SetText;
			</OnLoad>
		</Scripts>
	</Frame>
	
	<Frame name="FBoH_ColumnRowTemplate" virtual="true">
		<Size>
			<AbsDimension x="16" y="20"/>
		</Size>
		<Layers>
			<Layer level="ARTWORK">
				<FontString inherits="GameFontNormal" text="Value">
					<Anchors>
						<Anchor point="TOPLEFT"/>
						<Anchor point="BOTTOMRIGHT"/>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				this.SetText = FBoH_ColumnRowTemplate_SetText;
			</OnLoad>
		</Scripts>
	</Frame>
	
	<Frame name="FBoH_ColumnTemplate" virtual="true" resizable="true">
		<Frames>
			<Frame inherits="FBoH_ColumnHeaderTemplate" id="1">
				<Anchors>
					<Anchor point="TOPLEFT"/>
					<Anchor point="TOPRIGHT"/>
				</Anchors>
			</Frame>
			<Button inherits="FBoH_ColumnResizeTemplate" id="2">
				<Anchors>
					<Anchor point="CENTER" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="0" y="-15"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
		</Frames>
		<Scripts>
			<OnLoad>
				this.GetHeader = FBoH_ColumnTemplate_GetHeader;
				this.GetResizeGrip = FBoH_ColumnTemplate_GetResizeGrip;
				this.GetRow = FBoH_ColumnTemplate_GetRow;
				this.OnHeightChanged = FBoH_ColumnTemplate_HeightChanged;
				this.SetColumnAttributes = FBoH_ColumnTemplate_SetColumnAttributes
			</OnLoad>
			<OnSizeChanged>
				-- arg1 = new width, arg2 = new height
				this.currentWidth = arg1;
				this:OnHeightChanged(arg2);
			</OnSizeChanged>
		</Scripts>
	</Frame>
	
	<Frame name="FBoH_ListTemplate" virtual="true">
		<Frames>
			<Frame inherits="FBoH_OutlineTemplate">
				<Anchors>
					<Anchor point="TOPLEFT"/>
					<Anchor point="BOTTOMRIGHT" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="0" y="-30"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<ScrollFrame name="$parent_Scroll" inherits="FauxScrollFrameTemplate" id="10000">
				<Anchors>
					<Anchor point="TOPLEFT"/>
					<Anchor point="BOTTOMRIGHT"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						ScrollFrame_OnLoad(self);
						
--						self.DoVerticalScroll = FBoH_GridTemplate_DoVerticalScroll;
						
--						self.rowHeight = 43;
					</OnLoad>
					<OnVerticalScroll>
--						FBOH_SCROLL_GRID = self;
--						FauxScrollFrame_OnVerticalScroll(self, offset, self.rowHeight, FBoH_GridTemplate_OnVerticalScroll);
--						FBOH_SCROLL_GRID = nil;
					</OnVerticalScroll>
				</Scripts>
			</ScrollFrame>
		</Frames>
		<Scripts>
			<OnLoad>
				self.SetColumns = FBoH_ListTemplate_SetColumns;
				self.UpdateColumnResizeLimits = FBoH_ListTemplate_UpdateColumnResizeLimits;
				self.GetColumn = FBoH_GetChildObjectByID;
				self.ResizeColumnsToFit = FBoH_ListTemplate_ResizeColumnsToFit;
				self.GetBagModel = FBoH_GridListTemplate_GetBagModel;

				self:SetColumns({
									{ name = "Column 1", width="300", minWidth="100" },
									{ name = "Column 2", width="300", minWidth="100" },
									{ name = "Column 3", width="300", minWidth="100" }
								});
			</OnLoad>
			<OnSizeChanged>
				self:UpdateColumnResizeLimits();
			</OnSizeChanged>
		</Scripts>
	</Frame>
	
	<Frame name="FBoH_GridTemplate" virtual="true">
		<Frames>
			<ScrollFrame name="$parent_Scroll" inherits="FauxScrollFrameTemplate" id="10000">
				<Anchors>
					<Anchor point="TOPLEFT"/>
					<Anchor point="BOTTOMRIGHT"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						ScrollFrame_OnLoad(self);
						
						self.DoVerticalScroll = FBoH_GridTemplate_DoVerticalScroll;
						
						self.GetRowHeight = function(frame)
							return 37 + frame:GetParent().gridSpacing;
						end
					</OnLoad>
					<OnVerticalScroll>
						FBOH_SCROLL_GRID = self;
						FauxScrollFrame_OnVerticalScroll(self, offset, self:GetRowHeight(), FBoH_GridTemplate_OnVerticalScroll);
						FBOH_SCROLL_GRID = nil;
					</OnVerticalScroll>
				</Scripts>
			</ScrollFrame>
		</Frames>
		<Scripts>
			<OnLoad>
				self.ResizeGrid = FBoH_GridTemplate_ResizeGrid;
				self.RedrawGrid = FBoH_GridTemplate_RedrawGrid;
				self.GetItemButton = FBoH_GetChildObjectByID;
				self.GetViewModel = FBoH_GridListTemplate_GetViewModel;
				self.CreateItemButton = FBoH_GridTemplate_CreateItemButton;
				self.DoVerticalScroll = function(frame)
					scrollFrame = FBoH_GetChildObjectByID(frame, 10000);
					scrollFrame:DoVerticalScroll();
				end
				
				self.gridSpacing = 2;
				
				self:ResizeGrid();
			</OnLoad>
			<OnSizeChanged>
				self:ResizeGrid();
			</OnSizeChanged>
		</Scripts>
	</Frame>
	
	<Frame name="FBoH_BagViewTemplate" inherits="FBoH_OutlineTemplate" virtual="true" hidden="true" toplevel="true" frameStrata="HIGH" enableMouse="true" movable="true" resizable="true" clampedToScreen="false">
		<Size>
			<AbsDimension x="500" y="300"/>
		</Size>
		<ResizeBounds>
			<minResize>
				<AbsDimension x="400" y="200"/>
			</minResize>
			<maxResize>
				<AbsDimension x="1000" y="600"/>
			</maxResize>
		</ResizeBounds>
		<Anchors>
			<Anchor point="TOPLEFT">
				<Offset>
					<AbsDimension x="150" y="-150"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parent_SearchLabel" inherits="GameFontNormal" text="Search:">
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="8" y="-11"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<EditBox name="$parent_SearchEdit" autoFocus="false" inherits="InputBoxTemplate" id="2">
				<Size>
					<AbsDimension x="150" y="16"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_SearchLabel" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="8" y="2"/>
						</Offset>
					</Anchor>
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="-30" y="-9"/>
						</Offset>
					</Anchor>
				</Anchors>
				<FontString inherits="ChatFontNormal" bytes="64"/>
				<Scripts>
					<OnEscapePressed>
						this:ClearFocus();
					</OnEscapePressed>
					<OnEditFocusLost>
						this:HighlightText(0, 0);
					</OnEditFocusLost>
					<OnEditFocusGained>
						this:HighlightText();
					</OnEditFocusGained>
					<OnTextChanged>
						self:GetParent().viewModel:SetSearch(self:GetText());
					</OnTextChanged>
				</Scripts>
			</EditBox>
			<Button name="$parent_CloseButton" inherits="UIPanelCloseButton">
				<Anchors>
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="$parent_ResizeButton" inherits="FBoH_ResizeTemplate">
				<Anchors>
					<Anchor point="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Frame name="$parent_GoldFrame" inherits="SmallMoneyFrameTemplate">
				<Anchors>
					<Anchor point="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="6" y="6"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="$parent_ItemsFrame" inherits="FBoH_OutlineTemplate" id="1">
				<Anchors>
					<Anchor point="BOTTOMLEFT" relativeTo="$parent_GoldFrame" relativePoint="TOPLEFT">
						<Offset>
							<AbsDimension x="0" y="2"/>
						</Offset>
					</Anchor>
					<Anchor point="TOPRIGHT" relativeTo="$parent_SearchEdit" relativePoint="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="24" y="-4"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Frames>
					<Frame name="$parent_ItemListScrollFrame" inherits="FBoH_ListTemplate" hidden="true" id="1">
						<Anchors>
							<Anchor point="TOPLEFT">
								<Offset>
									<AbsDimension x="2" y="-4"/>
								</Offset>
							</Anchor>
							<Anchor point="BOTTOMRIGHT">
								<Offset>
									<AbsDimension x="-26" y="4"/>
								</Offset>
							</Anchor>
						</Anchors>
					</Frame>
					<Frame name="$parent_ItemGridScrollFrame" inherits="FBoH_GridTemplate" id="2">
						<Anchors>
							<Anchor point="TOPLEFT">
								<Offset>
									<AbsDimension x="2" y="-4"/>
								</Offset>
							</Anchor>
							<Anchor point="BOTTOMRIGHT">
								<Offset>
									<AbsDimension x="-26" y="4"/>
								</Offset>
							</Anchor>
						</Anchors>
					</Frame>
				</Frames>
			</Frame>
		</Frames>
		<Scripts>
			<OnLoad>
				self.UpdateViewModel = FBoH_BagViewTemplate_UpdateViewModel;
				self.SetGridScale = FBoH_BagViewTemplate_SetScale;
			</OnLoad>
			<OnShow>
				PlaySound("igBackPackOpen");
			</OnShow>
			<OnHide>
				PlaySound("igBackPackClose");
				if self.isMoving then
					self:StopMovingOrSizing();
					self.isMoving = false;
					self.viewModel:SaveFramePosition();
					FBoH_MOVING_BAG_VIEW = nil;
				end
			</OnHide>
			<OnSizeChanged>
				if self.viewModel then
					self.viewModel:SaveFramePosition();
				end
			</OnSizeChanged>
		</Scripts>
	</Frame>
	
</Ui>
